# """
# Inheritence
# –ù–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è –¥–æ–∑–≤–æ–ª—è—î –æ–¥–Ω–æ–º—É –∫–ª–∞—Å—É (–ø—ñ–¥–∫–ª–∞—Å—É) –ø–µ—Ä–µ–π–º–∞—Ç–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
# —Ç–∞ –º–µ—Ç–æ–¥–∏ —ñ–Ω—à–æ–≥–æ –∫–ª–∞—Å—É (–±–∞–∑–æ–≤–æ–≥–æ).
# """
#
# class Animal:
#     def speak(self):
#         print("Some sound")
#
# class Dog(Animal):
#     pass
#
# dog = Dog()
# dog.speak()  # üëâ "Some sound"
#
#
# """
# Incapsulation
# –ü—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –¥–µ—Ç–∞–ª–µ–π —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó ‚Äî –Ω–∞–ø—Ä–∏–∫–ª–∞–¥,
# —á–µ—Ä–µ–∑ –∑–º—ñ–Ω–Ω—ñ –∑ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º _ –∞–±–æ __.
# """
#
class Animal:
    def __init__(self, name):
        self.__name = name  # –ø—Ä–∏–≤–∞—Ç–Ω–∞ –∑–º—ñ–Ω–Ω–∞

    def get_name(self):
        return self.__name
#
# cat = Animal("Whiskers")
# print(cat.get_name())  # üëâ "Whiskers"

class BankAccount:
    def __init__(self, name):
        self.name = name
        self.__setting_balance_to_0()

    def return_balance(self):
        return self.__balance

    def __setting_balance_to_0(self):
        self.__balance = 0

    def increase_balance(self, amount: float):
        self.__balance = amount


my_account: BankAccount = BankAccount("Bohdan")
my_account.name = "Denys"
print(my_account.name)



# """
# Polymrphism
# –ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –æ–¥–∏–Ω —ñ —Ç–æ–π —Å–∞–º–∏–π –º–µ—Ç–æ–¥ —É —Ä—ñ–∑–Ω–∏—Ö –∫–ª–∞—Å–∞—Ö ‚Äî —ñ –≤—ñ–Ω –±—É–¥–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –ø–æ-—Ä—ñ–∑–Ω–æ–º—É.
# """
#
# class Animal:
#     def speak(self):
#         pass
#
# class Cat(Animal):
#     def speak(self):
#         print("Meow")
#
# class Dog(Animal):
#     def speak(self):
#         print("Woof")
#
# animals = [Cat(), Dog()]
# for a in animals:
#     a.speak()  # üëâ Meow, –ø–æ—Ç—ñ–º Woof
#
#
"""
Abstraction
–û–ø–∏—Å—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∞ –Ω–µ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é. –ó—Ä—É—á–Ω–æ —á–µ—Ä–µ–∑ abc (abstract base class):
"""

from abc import ABC, abstractmethod

class Animal(ABC):

    @abstractmethod
    def speak(self):
        pass

class Cat(Animal):
    def speak(self):
        print("Meow")

cat = Cat()
cat.speak()  # üëâ Meow
#
# a = Animal()
"""
–ú–µ—Ç–æ–¥ super() –≤ Python –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –≤–∏–∫–ª–∏–∫—É –º–µ—Ç–æ–¥—ñ–≤ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ (–±–∞–∑–æ–≤–æ–≥–æ)
–∫–ª–∞—Å—É –∑ –¥–æ—á—ñ—Ä–Ω—å–æ–≥–æ (–ø–æ—Ö—ñ–¥–Ω–æ–≥–æ) –∫–ª–∞—Å—É.
–¶–µ –æ—Å–æ–±–ª–∏–≤–æ –∫–æ—Ä–∏—Å–Ω–æ –ø—Ä–∏ –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—ñ, –∫–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–æ–∑—à–∏—Ä–∏—Ç–∏,
–∞ –Ω–µ –ø–æ–≤–Ω—ñ—Å—Ç—é –∑–∞–º—ñ–Ω–∏—Ç–∏ –ª–æ–≥—ñ–∫—É –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –∫–ª–∞—Å—É.
"""